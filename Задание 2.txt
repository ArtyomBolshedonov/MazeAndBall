Обобщения — это особые средства языка для реализации обобщённого программирования: особого подхода к описанию данных и алгоритмов,
позволяющего работать с различными типами данных без изменения их описания. Обобщения нужны для устранения необходимости явного приведения.
Обобщения используют для того чтобы избежать boxing и unboxing (например преобразование в ссылочный тип и обратно) - это делает код
более "быстрым", а также помогает избежать ошибок. При преобразовании через object трудно соблюдать типовую безопасность, требуется
явное приведение типов. Пример:

namespace WildLife
{
	public enum Sex
	{
		Male,
		Female,
	}

	public class Animals<T>
	{
		public T Gender = default(T);

		public Animals(T gender)
		{
			Gender = gender;
		}
	}
	//Обобщения могут использовать несколько универсальных параметров, которые могут представлять различные типы.
	//Обобщения поддерживают различные варианты наследования.
	// Аргумент типа, предоставляемый в качестве T, должен совпадать с аргументом, предоставляемым в качестве U,
	или быть производным от него.
	public class Cat<T, R, U> : Animals<R>
		where T : U
	{
		public T Id;
		public Cat(R gender) : base(gender)
		{
			Gender = gender;
		}
	}

	public class Program
	{
		private static void Main()
		{
			Cat<int, Sex, Object> animals = new Cat<int, Sex, Object>(Sex.Male);
			Animals<Sex> animals1 = new Cat<long, Sex, long>(Sex.Male);
			Animals<Sex> animals2 = new Animals<Sex>(Sex.Male);
		}
	}
}